import { copy } from 'esbuild-plugin-copy';
import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');
const test_build = (process.argv[2] === 'test' || process.argv[3] === 'test');

let entry_point;
let outfile;
if (!test_build) {
    entry_point = 'src/main.ts';
    outfile = 'C:/Users/rasche_j/Documents/everything/.obsidian/plugins/obsidian-task-timer/main.js';
} else {
    entry_point = 'tests/main.test.ts';
    outfile = 'C:/Users/rasche_j/Documents/everything/.obsidian/plugins/obsidian-task-timer/main.js'; // haven't found a way for obsidian to load main.test.js too
}


(async () => {
	const res = esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: [entry_point],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2016',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: outfile,
	plugins: [
		copy({
		  assets: {
			from: ['manifest.json'],
			to: ['manifest.json'],
		  },
		}),
	  ],
	});
})();
